<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>br.unifesp.ict.seg</groupId>
    <artifactId>i-code-genie</artifactId>
    <name>i-code-genie</name>
    <version>1.4.0-RC-01</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependencies -->
        <vaadin.version>14.6.2</vaadin.version>

		<java.version>1.8</java.version>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>dd/MM/yyyy HH:mm</maven.build.timestamp.format>
		<app-file-name>${project.artifactId}-${project.version}.jar</app-file-name>
		<ftp-server>ip</ftp-server>
		<ftp-port>port</ftp-port>
		<ftp-userid>user</ftp-userid>
		<ftp-password>pass</ftp-password>
		<ftp-remotedir>dir</ftp-remotedir>

    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.2.RELEASE</version>
    </parent>

    <pluginRepositories>
        <!-- Repository needed for prerelease versions of Vaadin -->
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </pluginRepository>
    </pluginRepositories>

    <repositories>
        <!-- Repository needed for prerelease versions of Vaadin -->
        <repository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </repository>
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>

		<dependency>
		    <groupId>com.github.appreciated</groupId>
		    <artifactId>prism-element</artifactId>
		    <version>0.7</version>
		</dependency>

		<dependency>
		   <groupId>org.vaadin.olli</groupId>
		   <artifactId>clipboardhelper</artifactId>
		   <version>1.0.0</version>
		</dependency>

		<!-- ************************************************************************************************ -->
		<!-- genie-search-api -->
		<dependency>
			<groupId>br.unifesp.ict.seg</groupId>
			<artifactId>genie-search-api</artifactId>
			<version>1.7.0</version>
		</dependency>

		<!-- commons-lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!-- commons-csv -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-csv</artifactId>
		    <version>1.4</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>2.5</version>
		</dependency>

		<!-- mysql -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- ant -->
		<dependency>
		    <groupId>org.apache.ant</groupId>
		    <artifactId>ant</artifactId>
		    <version>1.10.5</version>
		</dependency>

		<!-- sourcerer-services -->
		<dependency>
			<groupId>edu.uci.ics.sourcerer</groupId>
			<artifactId>sourcerer-services</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- jaws-bin -->
		<dependency>
			<groupId>edu.smu.tspell.wordnet</groupId>
			<artifactId>jaws-bin</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- genie-search-api -->
		<!-- ************************************************************************************************ -->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
			<plugin>
			    <inherited>false</inherited>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-antrun-plugin</artifactId>
			    <executions>
			        <execution>
			            <id>deploy-on-server</id>
			            <phase>install</phase>
			            <goals>
			                <goal>run</goal>
			            </goals>
			            <configuration>
			                <target name="deploy-on-server" description="how to get antrun plugin to work with SCP and SSH">

			                    <!-- file to be transferred -->
			                    <!-- 
  								-->
			                    <echo message="Tansferring App file... ${app-file-name}" />
								<scp todir="${ftp-userid}@${ftp-server}:${ftp-remotedir}" port="${ftp-port}" password="${ftp-password}" trust="true">
									<fileset file="target/${app-file-name}" />
								</scp>
  								
			                    <!-- remote host and the command to be executed there -->
			                    <sshexec trust="true" failonerror="false" host="${ftp-server}" port="${ftp-port}" username="${ftp-userid}" password="${ftp-password}" command="./i-code-genie-startup.sh ${app-file-name}" timeout="30000" />
			                    <taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp">
			                        <classpath refid="maven.plugin.classpath" />
			                    </taskdef>

			                </target>
			            </configuration>
			        </execution>
			    </executions>
			    <dependencies>
			        <dependency>
			            <groupId>ant</groupId>
			            <artifactId>ant-commons-net</artifactId>
			            <version>1.6.5</version>
			        </dependency>
			        <dependency>
			            <groupId>org.apache.ant</groupId>
			            <artifactId>ant-jsch</artifactId>
			            <version>1.9.1</version>
			        </dependency>
			    </dependencies>
			</plugin>              
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Production mode can be activated with either property or profile -->
            <id>production-mode</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>
            <properties>
                <vaadin.productionMode>true</vaadin.productionMode>
            </properties>


            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>copy-production-files</goal>
                                    <goal>package-for-production</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <jvmArguments>-Dvaadin.productionMode</jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>